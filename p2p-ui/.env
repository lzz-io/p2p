# https://cli.vuejs.org/zh/guide/mode-and-env.html
# .env                # 在所有的环境中被载入
# .env.local          # 在所有的环境中被载入，但会被 git 忽略
# .env.[mode]         # 只在指定的模式中被载入
# .env.[mode].local   # 只在指定的模式中被载入，但会被 git 忽略

# 一个环境文件只包含环境变量的“键=值”对：
#
# FOO=bar
# VUE_APP_SECRET=secret
# 被载入的变量将会对 vue-cli-service 的所有命令、插件和依赖可用。

# 只有以 VUE_APP_ 开头的变量会被 webpack.DefinePlugin 静态嵌入到客户端侧的包中。
# 你可以在应用的代码中这样访问它们：
# console.log(process.env.VUE_APP_SECRET)
#
# 除了 VUE_APP_* 变量之外，在你的应用代码中始终可用的还有两个特殊的变量：
#
# NODE_ENV - 会是 "development"、"production" 或 "test" 中的一个。
#            具体的值取决于应用运行的模式。
# BASE_URL - 会和 vue.config.js 中的 baseUrl 选项相符，即你的应用会部署到的基础路径。
# 所有解析出来的环境变量都可以在 public/index.html 中以 HTML 插值中介绍的方式使用。
#
# 提示
# 你可以在 vue.config.js 文件中计算环境变量。
# 它们仍然需要以 VUE_APP_ 前缀开头。
# 这可以用于版本信息 process.env.VUE_APP_VERSION = require('./package.json').version。

# 环境加载属性
# 为一个特定模式准备的环境文件的 (例如 .env.production)
# 将会比一般的环境文件 (例如 .env) 拥有更高的优先级。
#
# 此外，Vue CLI 启动时已经存在的环境变量拥有最高优先级，并不会被 .env 文件覆写。

# NODE_ENV
# 如果在环境中有默认的 NODE_ENV，
# 你应该移除它或在运行 vue-cli-service 命令的时候明确地设置 NODE_ENV。


# 模式
# 模式是 Vue CLI 项目中一个重要的概念。默认情况下，一个 Vue CLI 项目有三个模式：
#
# development 模式用于 vue-cli-service serve
# production 模式用于 vue-cli-service build 和 vue-cli-service test:e2e
# test 模式用于 vue-cli-service test:unit
